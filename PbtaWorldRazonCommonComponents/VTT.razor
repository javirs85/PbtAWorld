@using Microsoft.AspNetCore.Components.Forms
@using PbtALib;
@using PbtaWorldRazonCommonComponents;
@inject VTTService service;
@inject VTTLocalManagerService VTTViewer

<div class="VTT justify-content-center flex-grow-1"
		style="overflow:auto;"
		@onclick=VTTViewer.Hide
		@onclick:stopPropagation=true>
	<div class="d-flex d-flex align-items-center justify-content-center w-100 h-100"  @onclick:stopPropagation=true>
		<div class="VTTContainer"
			 style="position:absolute; top:@(MapPosY+"px"); left:@(MapPosX+"px");"
			@onmousedown=Click 
			@onmousemove=Drag 
			@onmouseup=UnClick
			@onmouseleave=Exit
			@oncontextmenu:preventDefault 
			@oncontextmenu:stopPropagation>
			<img src="/imgs/VTT/farm.jpg" width="1495" height="762"/>
			<div class="VTTMain">
				@foreach (var t in service.Tokens)
				{
					<div class="VTTToken @(VTTViewer.SelectedToken is not null && VTTViewer.SelectedToken.Guid == t.Guid?"Selected":"")"
							style="
						top:@(t.Y+"px"); left:@(t.X+"px"); 
						background-position-x:@(t.ImgX+"px"); 
						background-position-y:@(t.ImgY+"px");">
						<div class="LifeContainer">
							<div class="LifeBar" style="width:@(t.PercentageLife)%; background:@(t.LifeBarColor);"></div>
						</div>
						<div class="NameContainer">@t.Character?.Name</div>
					</div>
				}
				@if(VTTViewer.IsMaster)
				{
					<div class="MasterSelector d-flex gap-1" @onclick:stopPropagation>
						<EditForm Model="this" class="d-flex gap-1">
							<InputSelect class="form-select" @bind-Value=MasterSelection>
								@foreach(var v in Enum.GetValues(typeof(VTTTokens)))
								{
									<option value="@v">@v</option>
								}
							</InputSelect>
							<button class="btn btn-primary" @onclick=@(()=>{service.AddToken(MasterSelection);})><i class="bi bi-plus"></i></button>
						</EditForm>
						@if (VTTViewer.SelectedToken is not null)
						{
							<EditForm Model="VTTViewer.SelectedToken">
								<label>Max HP</label>
								<InputNumber @bind-Value=@VTTViewer.SelectedToken.maxHP style="width:40px;" />
								<label>HP</label>
								<InputNumber @bind-Value=@VTTViewer.SelectedToken.HP style="width:40px;" />
							</EditForm>
						}						
					</div>
				}
					
			</div>
		</div>
	</div>	
</div>

@code {

	protected override void OnParametersSet()
	{
		service.UpdateUI -= Update;
		service.UpdateUI += Update;
		VTTViewer.UpdateUI -= Update;
		VTTViewer.UpdateUI += Update;
	}

	VTTTokens MasterSelection = VTTTokens.Black1;
	private bool IsMoving = false;
	private double MapPosX = 0;
	private double MapPosY = 0;



	private void Unselect(MouseEventArgs e) 
	{

	}

	private void Click(MouseEventArgs e)
	{
		if(e.OffsetY > 40)
		{
			if(e.Button == 0)
			{
				var t = service.SelectToken(e.OffsetX, e.OffsetY);
				if (t is not null && t != VTTViewer.SelectedToken)
					VTTViewer.SelectedToken = t;
				else
				{
					IsMoving = true;
				}
			}
			else if(e.Button == 2)
			{
				service.MoveToken(VTTViewer.SelectedToken, e.OffsetX, e.OffsetY);
			}
		}
	}

	private void Drag(MouseEventArgs e)
	{
		if(IsMoving)
		{
			MapPosX += e.MovementX;
			MapPosY += e.MovementY;
		}
	}

	private void UnClick() => IsMoving = false;
	private void Exit() => IsMoving = false;



	private void Update(object? sender, EventArgs e)
	{
		InvokeAsync(StateHasChanged);
	}
}
