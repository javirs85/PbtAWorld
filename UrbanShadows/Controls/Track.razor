<div class="PbtASystemContainer d-flex gap-1">
    @foreach(var i in AvailableValues)
    {
        <div class="Box @(Value>i?"BoxTicked":"BoxEmpty")" @onclick="_ => Clicked(i)"></div>
    }
</div>

@code {
    private int _value;
    private List<int> AvailableValues = new();
    [Parameter]
    public int Value
    {
        get => _value;
        set
        {
            if (value == _value)
                return;

            _value = value;
            if (ValueChanged.HasDelegate)
            {
                ValueChanged.InvokeAsync(_value);
            }
        }
    }
    [Parameter] public EventCallback<int> ValueChanged { get; set; }
    [Parameter] public int MaxValue { get; set; } = 3;

    protected override void OnParametersSet()
    {
        AvailableValues.Clear();
        for (int i = 0; i < MaxValue; ++i)
            AvailableValues.Add(i);
    }

    private void Clicked(int i)
    {
        if (i >= Value) Value++;
        else if (i < Value) Value--;

        StateHasChanged();
    }
}
