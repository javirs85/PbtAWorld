@page "/SeasonViewer"
@using DungeonWorld;
@inject MetaController Meta;
@inject NavigationManager nav;
@inject DinoCharacter DinoCharacter;
@inject DWCharacter DWCharacter;

<PageTitle>Seleccione su personaje</PageTitle>

<div class="FullPage">
	<div class="DarkUpperMenu d-flex align-items-center justify-content-between">
		<i class="bi bi-arrow-left-short fs-1 p-2" style="cursor:pointer;" @onclick=GoBack></i>
		<p class="mt-3">@Meta.SelectedGame.ToUI() / @Meta.SelectedSeason.Name</p>
		<i class="bi bi-arrow-left-short fs-1 p-2" style="cursor:pointer; color:black" @onclick=GoBack></i>
	</div>
	<div class="Title">Elije su personaje</div>
	<div class="d-flex gap-2 p-2">
		<div class="p-3 d-flex flex-column gap-3 align-items-center" style="background:black;">
			<img src="@Meta.SelectedGameCover" />
			<div class="bitTittle fs-1">@Meta.SelectedSeason.Name</div>
			<div class="btn btn-danger w-100" @onclick=Delete>Eliminar</div>
		</div>
		<div class="p-3" style="background: black;">
			<EditForm Model="Meta.SelectedSeason">
				<div class="d-flex gap-1">
					<InputText class="form-control" @bind-Value=Meta.SelectedSeason.Name></InputText>
					<div class="btn btn-primary">Actualizar</div>
				</div>
				@if(Meta.SelectedSeason.Players.Count == 0)
				{
					<small>No hay personajes...</small>
				}
				else
				{
					@foreach(var p in Meta.SelectedSeason.Players)
					{
						<div class="PlayerBox"></div>
					}
				}
			</EditForm>
		</div>
		<div class="p-3 d-flex flex-column gap-2 text-light" style="background: black;">
			<p>Crear nuevo personaje de tipo...</p>
			@if(Meta.SelectedGame == AvailableGames.DW)
			{
				@foreach (DungeonWorld.DWClasses c in Enum.GetValues(typeof(DungeonWorld.DWClasses)))
				{
					@if(c != DWClasses.DW_NotSet)
					{
						<div class="btn btn-primary">@c.ToUI()</div>
					}
				}
			}else if(Meta.SelectedGame == AvailableGames.DI)
			{
				@foreach (DinoIsland.DinoClasses c in Enum.GetValues(typeof(DinoIsland.DinoClasses)))
				{
					@if (c != DinoClasses.NotSet)
					{
						<div class="btn btn-primary" @onclick=@(async ()=>{await CreateNewDinoCharacter(c);})>@c.ToUIString()</div>
					}
				}
			}
			<div></div>
		</div>
	</div>
</div>
@code {
	private void GoBack()
	{
		nav.NavigateTo("SeasonSelection");
	}

	private async Task Delete()
	{
		await Meta.DeleteSelectedSeason();
		nav.NavigateTo("SeasonSelection");
	}

	public Type AvailableProfessionsForSelectedGame
	{
		get
		{
			if (Meta.SelectedGame == AvailableGames.DW) return typeof(DungeonWorld.DWClasses);
			else if (Meta.SelectedGame == AvailableGames.DI) return typeof(DinoIsland.DinoClasses);
			//else if (Meta.SelectedGame == AvailableGames.US) return typeof(AvailableProfesionsforUS);
			else return null;
		}
	}

	private async Task CreateNewDinoCharacter(DinoClasses c)
	{
		DinoCharacter newCharacter = new DinoCharacter();
		newCharacter.Class = c;
		Meta.sto

	}
}
